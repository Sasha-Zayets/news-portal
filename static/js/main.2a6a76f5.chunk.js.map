{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Logo/Logo.jsx","components/Header/Header.jsx","components/Welcome/Welcome.jsx","store/actions.js","components/NewsItem/NewsItem.jsx","components/NewsList/NewsList.jsx","components/Chips/Chips.jsx","components/CountryNews/CountryNews.jsx","views/RootRouter.jsx","components/Content/Content.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","store/reducers.js","store/index.js","index.js"],"names":["Navbar","className","title","to","map","link","index","key","activeClassName","Logo","Header","Welcome","ADD_LIST","setList","url","dispatch","fetch","then","data","json","result","list","type","payload","addList","articles","catch","error","console","log","NewsItem","props","news","urlToImage","description","publishedAt","src","alt","href","target","NewsList","changeSearch","event","value","length","setState","showResultSearch","search","keyDown","sendSearch","state","this","listNews","placeholder","onKeyPress","onChange","onClick","item","React","Component","connect","Chips","activeClass","join","Click","children","CountryNews","chipsList","active","chips","forEach","el","indexChips","chip","setFilter","element","RootRouter","path","exact","component","Content","Footer","App","Boolean","window","location","hostname","match","todoApp","combineReducers","action","store","createStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a6a76f5.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Navbar.scss';\n\nconst Navbar = () => {\n    const state = {\n        links: [\n            {\n                title: 'News US',\n                to: '/news',\n            },\n            {\n                title: 'Ukraine News',\n                to: '/ukraine-news',\n            },\n            {\n                title: 'article',\n                to: '/article',\n            }\n        ]\n    }\n    return (\n        <nav className=\"navbar\">\n            {\n                state.links.map((link, index) => {\n                    return (\n                        <NavLink \n                            to={link.to} \n                            key={index}\n                            className=\"navbar__link\"\n                            activeClassName=\"navbar__link--active\">{ link.title }</NavLink>\n                    )\n                })\n            }\n        </nav>\n    )\n}\n\nexport default Navbar;\n","import React from 'react';\nimport './Logo.scss';\nimport { Link } from 'react-router-dom';\n\nconst Logo = () => (\n    <Link to=\"/\" className=\"logo\">My News</Link>\n)\n\nexport default Logo;","import React from 'react';\nimport './Header.scss';\nimport Navbar from '../Navbar/Navbar';\nimport Logo from '../Logo/Logo';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <Logo />\n            <Navbar />\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Welcome.scss';\n\nconst Welcome = () => (\n    <div className=\"welcome-block\">\n        <h1 className=\"welcome-block__title\">Welcome</h1>\n        <Link to='/news' className=\"welcome-block__link\">Read News</Link>\n    </div>\n)\n\nexport default Welcome;","export const ADD_LIST = 'ADD_LIST';\n\nexport function addList (list) {\n    return {\n        type: ADD_LIST,\n        payload: list\n    }\n}\n\nexport const setList = (url, dispatch) => {\n    return fetch(`${url}&apiKey=d38891e5f6fc4ec2885615900859eb4a`)\n        .then(data => {\n            return data.json()\n        })\n        .then(result => {\n            dispatch(addList(result.articles))\n        })\n        .catch(error => console.log(error))\n}","import React from 'react';\nimport './NewsItem.scss';\n\nconst NewsItem = (props) => {\n    const { title, urlToImage, description, publishedAt, url } = props.news;\n\n    return (\n        <div className=\"news-item\">\n            <picture className=\"news-item__frame\">\n                <img \n                    src={ urlToImage } \n                    className=\"news-item__image\"\n                    alt=\"\"/>\n            </picture>\n            <div className=\"news-item__content\">\n                <h2 className=\"news-item__title\">{ title }</h2>\n                <p className=\"news-item__description\">\n                    { description }\n                </p>\n                <div className=\"news-item__bottom\">\n                    <span className=\"news-item__date\">\n                        { publishedAt }\n                    </span>\n                    <a href={ url } target=\"__blank\" className=\"news-item__link\">To read the original</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NewsItem;","import React from 'react';\nimport './NewsList.scss';\nimport { connect } from 'react-redux';\nimport { setList } from '../../store/actions';\n\nimport NewsItem from '../NewsItem/NewsItem';\n\nclass NewsList extends React.Component {\n    constructor (props) {\n        super();\n\n        this.state = {\n            search: '',\n            showResultSearch: false\n        }\n    }\n\n    componentDidMount () {\n        setList('https://newsapi.org/v2/top-headlines?country=us', this.props.dispatch);   \n    }\n\n    changeSearch = (event) => {\n        const value = event.target.value;\n\n        if (value.length === 0) {\n            this.setState({\n                showResultSearch: false\n            })\n        }\n\n        this.setState({\n            search: value\n        });\n    }\n\n    keyDown = (event) => {\n        if (event.key === 'Enter') {\n            this.sendSearch()\n        }\n    }\n\n    sendSearch = () => {\n        const { search } = this.state;\n\n        if (search.length > 0) {\n            setList(`https://newsapi.org/v2/everything?q=${this.state.search}`, this.props.dispatch);\n            this.setState({\n                showResultSearch: true\n            })\n        }\n    }\n\n    render () {\n        const { listNews } = this.props;\n        const { search, showResultSearch } = this.state;\n\n        return (\n            <div className=\"news-list\">\n                <div className=\"news-list__search\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"Search\"\n                        value={ search } \n                        onKeyPress={ this.keyDown }\n                        onChange={ this.changeSearch } />\n                    <button className=\"news-list__button\" onClick={ this.sendSearch }>Search</button>\n                </div>\n                {   (search.length > 0 && showResultSearch) &&\n                    <div className=\"news-list__result\">\n                        <strong>Search result: { search } </strong>\n                    </div>\n                }\n                <div className=\"news-list__row\">\n                    {\n                        listNews.map((item, index) => {\n                            return (\n                                <div key={index} className=\"news-list__col\">\n                                    <NewsItem news={item} index={index} />\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        listNews: state.list\n    }\n}\n\n\nexport default connect(mapStateToProps)(NewsList);","import React from 'react';\nimport './Chips.scss';\n\nconst Chips = (props) => {\n    const activeClass = props.activeClass ? 'chips--active': '';\n\n    return (\n        <button \n            className={['chips', activeClass].join(' ')}\n            onClick={() => props.Click()}>{ props.children }</button>\n    )\n}\n\nexport default Chips;","import React from 'react';\nimport { connect } from 'react-redux';\nimport './CountryNews.scss';\n\nimport Chips from '../Chips/Chips';\nimport NewsItem from '../NewsItem/NewsItem';\n\nimport { setList } from '../../store/actions';\n\nclass CountryNews extends React.Component {\n    constructor (props) {\n        super();\n\n        this.state = {\n            chipsList: [\n                {\n                    title: 'business',\n                    active: false\n                },\n                {\n                    title: 'entertainment',\n                    active: false\n                },\n                {\n                    title: 'health',\n                    active: false\n                },\n                {\n                    title: 'science',\n                    active: false\n                },\n                {\n                    title: 'sports',\n                    active: false\n                },\n                {\n                    title: 'technology',\n                    active: false\n                }\n            ]\n        }\n    }\n\n    componentDidMount () {\n        setList(`https://newsapi.org/v2/top-headlines?country=ua`, this.props.dispatch);\n    }\n\n    setFilter (value, index) {\n        const chips = this.state.chipsList;\n        const active = chips[index].active;\n        \n        chips.forEach((el, indexChips) => {\n            if (index === indexChips) {\n                el.active = !active;\n            } else {\n                el.active = false;\n            }\n        });\n\n        this.setState({\n            chipsList: chips\n        });\n\n        setList(`https://newsapi.org/v2/top-headlines?country=ua&category=${value}`, this.props.dispatch);\n    }\n\n    render () {\n        const { listNews } = this.props;\n        const { chipsList } = this.state;\n\n        return (\n            <div className=\"country-news\">\n                <h2 className=\"country-news__title\">Country news</h2>\n                <div className=\"country-news__filter\">\n                    {   chipsList.map((chip, index) => {\n                            return (\n                                <Chips \n                                    key={index}\n                                    activeClass={chip.active}\n                                    Click={() => this.setFilter(chip.title, index)}> {chip.title} </Chips>\n                            )\n                        })\n                    }\n                </div>\n                <div>\n                    {   listNews.map((element, index) => {\n                            return (\n                                <div className=\"country-news__item\" key={index}>\n                                    <NewsItem news={element} />\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        listNews: state.list\n    }\n}\n\nexport default connect(mapStateToProps)(CountryNews);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Welcome from '../components/Welcome/Welcome';\nimport NewsList from '../components/NewsList/NewsList';\nimport CountryNews from '../components/CountryNews/CountryNews';\n\nconst RootRouter = () => {\n    return (\n        <Switch>\n            <Route path='/' exact component={Welcome}></Route>\n            <Route path='/news-portal/' exact component={Welcome}></Route>\n\n            <Route path='/news' exact component={NewsList}></Route>\n            <Route path='/ukraine-news' component={CountryNews}></Route>\n        </Switch>\n    )\n}\n\nexport default RootRouter;","import React from 'react';\nimport './Content.scss';\nimport RootRouter from '../../views/RootRouter';\n\nconst Content = () => (\n    <main className=\"main\">\n        <div className=\"container\">\n            <RootRouter />\n        </div>\n    </main>\n)\n\nexport default Content;","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = () => (\n    <footer className=\"footer\">© Sasha Zayets</footer>\n)\n\nexport default Footer;","import React, { Fragment } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Content from './components/Content/Content';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Header />\n      <Content />\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport { ADD_LIST } from './actions';\n\nconst listNews = []\nfunction list (state = listNews, action ) {\n  switch (action.type) {\n    case ADD_LIST:\n      state = action.payload\n      return state\n    default:\n      return state\n  }\n}\n\nconst todoApp = combineReducers({\n  list\n})\n\nexport default todoApp\n","import { createStore } from 'redux'\nimport todoApp from './reducers'\n\nconst store = createStore(todoApp)\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst app = (\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}